{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/fanxingzhong/ImageShare/App.js\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Sharing from 'expo-sharing';\nexport default function App() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedImage = _React$useState2[0],\n      setSelectedImage = _React$useState2[1];\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 11:\n            setSelectedImage({\n              localUri: pickerResult.uri\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openShareDialogAsync = function openShareDialogAsync() {\n    return _regeneratorRuntime.async(function openShareDialogAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Sharing.isAvailableAsync());\n\n          case 2:\n            if (_context2.sent) {\n              _context2.next = 5;\n              break;\n            }\n\n            alert(\"Uh oh, sharing isn't available on your platform\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(Sharing.shareAsync(selectedImage.localUri));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (selectedImage !== null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: selectedImage.localUri\n      },\n      style: styles.thumbnail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: openShareDialogAsync,\n      style: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Share this photo\")));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: \"https://i.imgur.com/TkIrScD.png\"\n    },\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"To share a photo from your phone with a friend, just press the button below!\"), React.createElement(TouchableOpacity, {\n    onPress: openImagePickerAsync,\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Pick a photo\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 305,\n    height: 159,\n    marginBottom: 10\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 20,\n    marginHorizontal: 15\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  thumbnail: {\n    width: 300,\n    height: 300,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["/Users/fanxingzhong/ImageShare/App.js"],"names":["React","ImagePicker","Sharing","App","useState","selectedImage","setSelectedImage","openImagePickerAsync","requestCameraRollPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","cancelled","localUri","uri","openShareDialogAsync","isAvailableAsync","shareAsync","styles","container","thumbnail","button","buttonText","logo","instructions","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","color","fontSize","marginHorizontal","padding","borderRadius","resizeMode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker'\nimport * as Sharing from 'expo-sharing'\n\nexport default function App() {\n  const [selectedImage, setSelectedImage] = React.useState(null);\n\n  let openImagePickerAsync = async () => {\n    let permissionResult = await ImagePicker.requestCameraRollPermissionsAsync();\n\n    if (permissionResult.granted === false) {\n      alert(\"Permission to access camera roll is required!\");\n      return;\n    }\n\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\n\n    if (pickerResult.cancelled === true) {\n      return;\n    }\n\n    setSelectedImage({ localUri: pickerResult.uri });\n  };\n\n  let openShareDialogAsync = async () => {\n    if (!(await Sharing.isAvailableAsync())) {\n      alert(`Uh oh, sharing isn't available on your platform`);\n      return;\n    }\n\n  \tawait Sharing.shareAsync(selectedImage.localUri);\n  };\n\n  if (selectedImage !== null) {\n  \treturn (\n      <View style={styles.container}>\n  \t\t<Image source={{uri: selectedImage.localUri}} style={styles.thumbnail}/>\n        <TouchableOpacity onPress={openShareDialogAsync} style={styles.button}>\n          <Text style={styles.buttonText}>Share this photo</Text>\n        </TouchableOpacity>\n  \t\t</View>\n  \t\t);\n  }\n\n  return (\n    <View style={styles.container}>\n      <Image source={{ uri: \"https://i.imgur.com/TkIrScD.png\" }} style={styles.logo}/>\n\n      <Text style={styles.instructions}>\n      To share a photo from your phone with a friend, just press the button below!\n      </Text>\n\n      <TouchableOpacity onPress={openImagePickerAsync} style={styles.button}>\n        <Text style={styles.buttonText}>Pick a photo</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo:{\n    width: 305,\n    height: 159,\n    marginBottom:10,\n  },\n  instructions: {\n    color:'#888',\n    fontSize:20,\n    marginHorizontal:15\n  },\n  button:{\n    backgroundColor:'blue',\n    padding:20,\n    borderRadius:5,\n  },\n  buttonText:{\n    fontSize:20,\n    color:'#fff'\n  },\n  thumbnail:{\n  \twidth:300,\n  \theight:300,\n  \tresizeMode:'contain',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}